{
  "contractName": "SpaceToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "increasedSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        }
      ],
      "name": "ERC20ExceededCap",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        }
      ],
      "name": "ERC20InvalidCap",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SpaceToken.sol\":\"SpaceToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x5e409b7a622ee3d4ccb9daefd773c6ab02f3845f08fd8915a6b4309242667981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce8cdb5bad72e9750123a95e8c67af7784b44f51e3886a2e852b11b2d6b7779e\",\"dweb:/ipfs/QmYsf4JNohNRemUt54DPwTwPrnw3AyzJDshVWwoCi6FNVJ\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x22ddc82ec0ca9b87e340378b0bd956609357f00008e2ade323ee3eece0572b57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e5506f727f445aabbb98f0d4090c94e9df479d4959d19f1d53355087d6637ef\",\"dweb:/ipfs/QmYnPGJovmZLbuFaaBHMtbtkgQyGBmfsZow2VayYEw5nU6\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://084698c9feace630ff29919baad9df0721944eb2ecaf942ef807935bbbe41b5a\",\"dweb:/ipfs/Qmet4EQYqPLSKo7UPBNGaVw5NPATNkiLsqSCnCgg5kAPg4\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"project:/contracts/SpaceToken.sol\":{\"keccak256\":\"0x22f8be35d495872cd54132f8ff03afbd37c9abfa4dd91ab1aa6897ae9d1a1f8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a71a65898a80c2179a06585995921cc1caeee66527e1135a241253184f6694\",\"dweb:/ipfs/QmRFZxqcetUBHp6EEkvYW6MobY15zYz6JjKqUKWKjE4EAb\"]}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200156338038062001563833981016040819052620000349162000537565b8062000048640100000000620001e6810204565b6200005590600a620006a7565b620000619084620006bf565b6040518060400160405280600a81526020017f5370616365546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f53505458000000000000000000000000000000000000000000000000000000008152508160039081620000de9190620007af565b506004620000ed8282620007af565b5050508060000362000133576040517f392e1e27000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6080526005805460ff19169055600160a060020a03811662000185576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016200012a565b6200019981640100000000620001eb810204565b50620001de33620001b2640100000000620001e6810204565b620001bf90600a620006a7565b620001cf906302faf080620006bf565b64010000000062000245810204565b505062000898565b601290565b60058054600160a060020a0383811661010081810261010060a860020a031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600160a060020a0382166200028a576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016200012a565b620002a160008383640100000000620002a5810204565b5050565b620002bb838383640100000000620002c0810204565b505050565b620002d3640100000000620002e9810204565b620002bb83838364010000000062000336810204565b620002fc640100000000620003d6810204565b1562000334576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6200034c838383640100000000620003df810204565b600160a060020a038316620002bb576000620003706401000000006200052b810204565b905060006200038764010000000062000531810204565b905081811115620003cf576040517f9e79f85400000000000000000000000000000000000000000000000000000000815260048101829052602481018390526044016200012a565b5050505050565b60055460ff1690565b600160a060020a0383166200040e57806002600082825462000402919062000882565b909155506200049b9050565b600160a060020a038316600090815260208190526040902054818110156200047c576040517fe450d38c000000000000000000000000000000000000000000000000000000008152600160a060020a038516600482015260248101829052604481018390526064016200012a565b600160a060020a03841660009081526020819052604090209082900390555b600160a060020a038216620004b957600280548290039055620004d8565b600160a060020a03821660009081526020819052604090208054820190555b81600160a060020a031683600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200051e91815260200190565b60405180910390a3505050565b60805190565b60025490565b600080604083850312156200054b57600080fd5b82516020840151909250600160a060020a03811681146200056b57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b80851115620005e8578160001904821115620005ca57620005ca62000576565b80851615620005d857918102915b60029094049390800290620005aa565b509250929050565b6000826200060157506001620006a1565b816200061057506000620006a1565b8160018114620006295760028114620006345762000655565b6001915050620006a1565b60ff84111562000648576200064862000576565b8360020a915050620006a1565b5060208310610133831016604e8410600b84101617156200067a575081810a620006a1565b620006868383620005a5565b80600019048211156200069d576200069d62000576565b0290505b92915050565b6000620006b860ff841683620005f0565b9392505050565b8082028115828204841417620006a157620006a162000576565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6002810460018216806200071d57607f821691505b60208210810362000757577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115620002bb576000818152602081206020601f86010481016020861015620007865750805b6020601f860104820191505b81811015620007a75782815560010162000792565b505050505050565b815167ffffffffffffffff811115620007cc57620007cc620006d9565b620007e481620007dd845462000708565b846200075d565b602080601f831160018114620008205760008415620008035750858301515b60028086026008870290910a6000190419821617865550620007a7565b600085815260208120601f198616915b82811015620008515788860151825594840194600190910190840162000830565b50858210156200087257878501516008601f88160260020a60001904191681555b5050505050600202600101905550565b80820180821115620006a157620006a162000576565b608051610ca8620008bb600039600081816101af01526108f90152610ca86000f3fe608060405234801561001057600080fd5b5060043610610133576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100bf5780638da5cb5b1161008e5780638da5cb5b1461024757806395d89b4114610270578063a9059cbb14610278578063dd62ed3e1461028b578063f2fde38b146102c457600080fd5b806370a08231146101fb578063715018a61461022457806379cc67901461022c5780638456cb591461023f57600080fd5b8063313ce56711610106578063313ce5671461019e578063355274ea146101ad5780633f4ba83a146101d357806342966c68146101dd5780635c975abb146101f057600080fd5b806306fdde0314610138578063095ea7b31461015657806318160ddd1461017957806323b872dd1461018b575b600080fd5b6101406102d7565b60405161014d9190610aa7565b60405180910390f35b610169610164366004610b11565b610369565b604051901515815260200161014d565b6002545b60405190815260200161014d565b610169610199366004610b3b565b610383565b6040516012815260200161014d565b7f000000000000000000000000000000000000000000000000000000000000000061017d565b6101db6103a7565b005b6101db6101eb366004610b77565b6103b9565b60055460ff16610169565b61017d610209366004610b90565b600160a060020a031660009081526020819052604090205490565b6101db6103c6565b6101db61023a366004610b11565b6103d8565b6101db6103f1565b6005546101009004600160a060020a0316604051600160a060020a03909116815260200161014d565b610140610401565b610169610286366004610b11565b610410565b61017d610299366004610bb2565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6101db6102d2366004610b90565b61041e565b6060600380546102e690610be5565b80601f016020809104026020016040519081016040528092919081815260200182805461031290610be5565b801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b5050505050905090565b600033610377818585610477565b60019150505b92915050565b600033610391858285610489565b61039c858585610520565b506001949350505050565b6103af6105b1565b6103b76105fd565b565b6103c3338261064f565b50565b6103ce6105b1565b6103b7600061069e565b6103e3823383610489565b6103ed828261064f565b5050565b6103f96105b1565b6103b7610705565b6060600480546102e690610be5565b600033610377818585610520565b6104266105b1565b600160a060020a03811661046e576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6103c38161069e565b6104848383836001610742565b505050565b600160a060020a03838116600090815260016020908152604080832093861683529290522054600019811461051a578181101561050b576040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600160a060020a03841660048201526024810182905260448101839052606401610465565b61051a84848484036000610742565b50505050565b600160a060020a038316610563576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610465565b600160a060020a0382166105a6576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610465565b610484838383610849565b600554600160a060020a036101009091041633146103b7576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610465565b610605610854565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051600160a060020a03909116815260200160405180910390a1565b600160a060020a038216610692576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610465565b6103ed82600083610849565b60058054600160a060020a0383811661010081810274ffffffffffffffffffffffffffffffffffffffff001985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61070d610890565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106323390565b600160a060020a038416610785576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610465565b600160a060020a0383166107c8576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610465565b600160a060020a038085166000908152600160209081526040808320938716835292905220829055801561051a5782600160a060020a031684600160a060020a03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161083b91815260200190565b60405180910390a350505050565b6104848383836108cd565b60055460ff166103b7576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460ff16156103b7576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108d5610890565b6104848383836108e6838383610964565b600160a060020a038316610484576002547f0000000000000000000000000000000000000000000000000000000000000000908181111561095d576040517f9e79f8540000000000000000000000000000000000000000000000000000000081526004810182905260248101839052604401610465565b5050505050565b600160a060020a03831661098f5780600260008282546109849190610c38565b90915550610a1a9050565b600160a060020a038316600090815260208190526040902054818110156109fb576040517fe450d38c000000000000000000000000000000000000000000000000000000008152600160a060020a03851660048201526024810182905260448101839052606401610465565b600160a060020a03841660009081526020819052604090209082900390555b600160a060020a038216610a3657600280548290039055610a55565b600160a060020a03821660009081526020819052604090208054820190555b81600160a060020a031683600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a9a91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610ad457858101830151858201604001528201610ab8565b506000604082860101526040601f19601f8301168501019250505092915050565b8035600160a060020a0381168114610b0c57600080fd5b919050565b60008060408385031215610b2457600080fd5b610b2d83610af5565b946020939093013593505050565b600080600060608486031215610b5057600080fd5b610b5984610af5565b9250610b6760208501610af5565b9150604084013590509250925092565b600060208284031215610b8957600080fd5b5035919050565b600060208284031215610ba257600080fd5b610bab82610af5565b9392505050565b60008060408385031215610bc557600080fd5b610bce83610af5565b9150610bdc60208401610af5565b90509250929050565b600281046001821680610bf957607f821691505b602082108103610c32577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561037d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207a4b2bd35719cfc483668d1b07572b470c45c3bd0aca871721fc971cae9659b664736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610133576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100bf5780638da5cb5b1161008e5780638da5cb5b1461024757806395d89b4114610270578063a9059cbb14610278578063dd62ed3e1461028b578063f2fde38b146102c457600080fd5b806370a08231146101fb578063715018a61461022457806379cc67901461022c5780638456cb591461023f57600080fd5b8063313ce56711610106578063313ce5671461019e578063355274ea146101ad5780633f4ba83a146101d357806342966c68146101dd5780635c975abb146101f057600080fd5b806306fdde0314610138578063095ea7b31461015657806318160ddd1461017957806323b872dd1461018b575b600080fd5b6101406102d7565b60405161014d9190610aa7565b60405180910390f35b610169610164366004610b11565b610369565b604051901515815260200161014d565b6002545b60405190815260200161014d565b610169610199366004610b3b565b610383565b6040516012815260200161014d565b7f000000000000000000000000000000000000000000000000000000000000000061017d565b6101db6103a7565b005b6101db6101eb366004610b77565b6103b9565b60055460ff16610169565b61017d610209366004610b90565b600160a060020a031660009081526020819052604090205490565b6101db6103c6565b6101db61023a366004610b11565b6103d8565b6101db6103f1565b6005546101009004600160a060020a0316604051600160a060020a03909116815260200161014d565b610140610401565b610169610286366004610b11565b610410565b61017d610299366004610bb2565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6101db6102d2366004610b90565b61041e565b6060600380546102e690610be5565b80601f016020809104026020016040519081016040528092919081815260200182805461031290610be5565b801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b5050505050905090565b600033610377818585610477565b60019150505b92915050565b600033610391858285610489565b61039c858585610520565b506001949350505050565b6103af6105b1565b6103b76105fd565b565b6103c3338261064f565b50565b6103ce6105b1565b6103b7600061069e565b6103e3823383610489565b6103ed828261064f565b5050565b6103f96105b1565b6103b7610705565b6060600480546102e690610be5565b600033610377818585610520565b6104266105b1565b600160a060020a03811661046e576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6103c38161069e565b6104848383836001610742565b505050565b600160a060020a03838116600090815260016020908152604080832093861683529290522054600019811461051a578181101561050b576040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600160a060020a03841660048201526024810182905260448101839052606401610465565b61051a84848484036000610742565b50505050565b600160a060020a038316610563576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610465565b600160a060020a0382166105a6576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610465565b610484838383610849565b600554600160a060020a036101009091041633146103b7576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610465565b610605610854565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051600160a060020a03909116815260200160405180910390a1565b600160a060020a038216610692576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610465565b6103ed82600083610849565b60058054600160a060020a0383811661010081810274ffffffffffffffffffffffffffffffffffffffff001985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61070d610890565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106323390565b600160a060020a038416610785576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610465565b600160a060020a0383166107c8576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610465565b600160a060020a038085166000908152600160209081526040808320938716835292905220829055801561051a5782600160a060020a031684600160a060020a03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161083b91815260200190565b60405180910390a350505050565b6104848383836108cd565b60055460ff166103b7576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460ff16156103b7576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108d5610890565b6104848383836108e6838383610964565b600160a060020a038316610484576002547f0000000000000000000000000000000000000000000000000000000000000000908181111561095d576040517f9e79f8540000000000000000000000000000000000000000000000000000000081526004810182905260248101839052604401610465565b5050505050565b600160a060020a03831661098f5780600260008282546109849190610c38565b90915550610a1a9050565b600160a060020a038316600090815260208190526040902054818110156109fb576040517fe450d38c000000000000000000000000000000000000000000000000000000008152600160a060020a03851660048201526024810182905260448101839052606401610465565b600160a060020a03841660009081526020819052604090209082900390555b600160a060020a038216610a3657600280548290039055610a55565b600160a060020a03821660009081526020819052604090208054820190555b81600160a060020a031683600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a9a91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610ad457858101830151858201604001528201610ab8565b506000604082860101526040601f19601f8301168501019250505092915050565b8035600160a060020a0381168114610b0c57600080fd5b919050565b60008060408385031215610b2457600080fd5b610b2d83610af5565b946020939093013593505050565b600080600060608486031215610b5057600080fd5b610b5984610af5565b9250610b6760208501610af5565b9150604084013590509250925092565b600060208284031215610b8957600080fd5b5035919050565b600060208284031215610ba257600080fd5b610bab82610af5565b9392505050565b60008060408385031215610bc557600080fd5b610bce83610af5565b9150610bdc60208401610af5565b90509250929050565b600281046001821680610bf957607f821691505b602082108103610c32577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561037d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207a4b2bd35719cfc483668d1b07572b470c45c3bd0aca871721fc971cae9659b664736f6c63430008140033",
  "immutableReferences": {
    "932": [
      {
        "length": 32,
        "start": 431
      },
      {
        "length": 32,
        "start": 2297
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6278:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "112:253:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "133:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "142:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "129:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "129:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "154:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "125:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "122:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "183:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "199:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "193:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "193:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "183:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "218:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "241:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "252:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "237:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "237:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:25:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "222:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "319:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "328:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "331:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "321:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "321:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "321:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "278:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "289:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "304:1:11",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "307:3:11",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "300:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "300:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "313:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "296:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "296:19:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "285:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "285:31:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "275:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "275:42:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "268:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "268:50:11"
                  },
                  "nodeType": "YulIf",
                  "src": "265:70:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "344:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "354:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "344:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "70:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "81:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "93:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "101:6:11",
                "type": ""
              }
            ],
            "src": "14:351:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "402:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "419:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "422:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "412:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "412:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "412:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "519:4:11",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "509:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "540:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "543:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "533:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "533:15:11"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "370:184:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "623:355:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "633:16:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "648:1:11",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "637:7:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "658:16:11",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "667:7:11"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "658:5:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "683:13:11",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "691:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "683:4:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "747:225:11",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "792:22:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "794:16:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "794:18:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "794:18:11"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "767:4:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "781:1:11",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "777:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "777:6:11"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "785:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "773:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "773:17:11"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "764:2:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "764:27:11"
                        },
                        "nodeType": "YulIf",
                        "src": "761:53:11"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "853:29:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "855:25:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "868:5:11"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "875:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "864:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "864:16:11"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "855:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "834:8:11"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "844:7:11"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "830:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "830:22:11"
                        },
                        "nodeType": "YulIf",
                        "src": "827:55:11"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "895:23:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "907:4:11"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "913:4:11"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "903:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "903:15:11"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "895:4:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "931:31:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "947:8:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "957:4:11",
                              "type": "",
                              "value": "0x02"
                            }
                          ],
                          "functionName": {
                            "name": "div",
                            "nodeType": "YulIdentifier",
                            "src": "943:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "943:19:11"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "931:8:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "716:8:11"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "726:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "713:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "713:21:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "735:3:11",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "709:3:11",
                    "statements": []
                  },
                  "src": "705:267:11"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "587:5:11",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "594:8:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "607:5:11",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "614:4:11",
                "type": ""
              }
            ],
            "src": "559:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1042:747:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1080:52:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1094:10:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1103:1:11",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "1094:5:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "1117:5:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "1062:8:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1055:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1055:16:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1052:80:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1165:52:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1179:10:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1188:1:11",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "1179:5:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "1202:5:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "1151:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1144:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1144:12:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1141:76:11"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1253:52:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "1267:10:11",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1276:1:11",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "1267:5:11"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "1290:5:11"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "1246:59:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1251:1:11",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1321:123:11",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1356:22:11",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1358:16:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1358:18:11"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1358:18:11"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "1341:8:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1351:3:11",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "1338:2:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1338:17:11"
                            },
                            "nodeType": "YulIf",
                            "src": "1335:43:11"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1391:25:11",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1404:1:11",
                                  "type": "",
                                  "value": "2"
                                },
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "1407:8:11"
                                }
                              ],
                              "functionName": {
                                "name": "exp",
                                "nodeType": "YulIdentifier",
                                "src": "1400:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1400:16:11"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "1391:5:11"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "1429:5:11"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "1314:130:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1319:1:11",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "1233:4:11"
                  },
                  "nodeType": "YulSwitch",
                  "src": "1226:218:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1542:70:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1556:28:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "1569:4:11"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "1575:8:11"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "1565:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1565:19:11"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "1556:5:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "1597:5:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "1466:4:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1472:2:11",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1463:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1463:12:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "1480:8:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1490:2:11",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1477:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1477:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1459:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1459:35:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "1503:4:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1509:3:11",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1500:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1500:13:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "1518:8:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1528:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1515:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1515:16:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1496:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:36:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1456:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1456:77:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1453:159:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1621:57:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "1663:4:11"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "1669:8:11"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "1644:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1644:34:11"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "1625:7:11",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "1634:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1723:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1725:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1725:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1725:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "1693:7:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1710:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "1706:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1706:6:11"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "1714:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "1702:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1702:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1690:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1690:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1687:58:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1754:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "1767:7:11"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "1776:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "1763:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1763:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "1754:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "1013:4:11",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "1019:8:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "1032:5:11",
                "type": ""
              }
            ],
            "src": "983:806:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1862:72:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1872:56:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "1902:4:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "1912:8:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1922:4:11",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1908:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1908:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "1881:20:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1881:47:11"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "1872:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "1833:4:11",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "1839:8:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "1852:5:11",
                "type": ""
              }
            ],
            "src": "1794:140:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1991:116:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2001:20:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2016:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2019:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2012:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2012:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2001:7:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2079:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2081:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2081:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2081:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2050:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2043:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2043:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "2057:1:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "2064:7:11"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2073:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2060:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2060:15:11"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "2054:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2054:22:11"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "2040:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2040:37:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2033:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:45:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2030:71:11"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1970:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1973:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "1979:7:11",
                "type": ""
              }
            ],
            "src": "1939:168:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2144:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2161:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2164:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2154:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2154:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2154:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2258:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2261:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2251:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2251:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2251:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2282:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2285:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2275:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2275:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2275:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2112:184:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2356:382:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2366:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2380:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2386:1:11",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2376:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2376:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2366:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2397:38:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2427:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2433:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2423:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2423:12:11"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2401:18:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2474:31:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2476:27:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2490:6:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2498:4:11",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2486:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2486:17:11"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2476:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2454:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2447:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2447:26:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2444:61:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2564:168:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2585:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2588:77:11",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2578:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2578:88:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2578:88:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2686:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2689:4:11",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2679:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2679:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2679:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2714:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2717:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2707:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2707:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2707:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2520:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2543:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2551:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2540:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2540:14:11"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2517:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:38:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2514:218:11"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2336:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2345:6:11",
                "type": ""
              }
            ],
            "src": "2301:437:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2799:65:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2816:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "2819:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2809:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2809:14:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2809:14:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2832:26:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2850:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2853:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "2840:9:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2840:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "2832:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "2782:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2790:4:11",
                "type": ""
              }
            ],
            "src": "2743:121:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2950:470:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2983:431:11",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2997:11:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3007:1:11",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "3001:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3028:2:11"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "3032:5:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3021:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3021:17:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3021:17:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3051:31:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3073:2:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3077:4:11",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "3063:9:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3063:19:11"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "3055:4:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3095:60:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "3118:4:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "3132:10:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3144:2:11",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3128:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3128:19:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3149:4:11",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "3124:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3124:30:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3114:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3114:41:11"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "3099:11:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3192:23:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3194:19:11",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "3209:4:11"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3194:11:11"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "3174:10:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3186:4:11",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "3171:2:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3171:20:11"
                        },
                        "nodeType": "YulIf",
                        "src": "3168:47:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3228:44:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "3242:4:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "3256:3:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3261:2:11",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3252:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3252:12:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3266:4:11",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "3248:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3248:23:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3238:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3238:34:11"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "3232:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3285:24:11",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "3298:11:11"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "3289:5:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3383:21:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "3392:5:11"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3399:2:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3385:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3385:17:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3385:17:11"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "3333:5:11"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "3340:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "3330:2:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3330:13:11"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "3344:26:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3346:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "3359:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3366:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3355:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3355:13:11"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "3346:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "3326:3:11",
                          "statements": []
                        },
                        "src": "3322:82:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "2966:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2971:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2963:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2963:11:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2960:454:11"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2922:5:11",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "2929:3:11",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "2934:10:11",
                "type": ""
              }
            ],
            "src": "2869:551:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3510:89:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3520:73:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "3535:4:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3553:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "3549:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3549:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3561:1:11",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3568:1:11",
                                            "type": "",
                                            "value": "8"
                                          },
                                          {
                                            "name": "len",
                                            "nodeType": "YulIdentifier",
                                            "src": "3571:3:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "3564:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3564:11:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "3557:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3557:19:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "3545:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3545:32:11"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "3541:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3541:37:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3531:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3531:48:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3585:1:11",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "3588:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "3581:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3581:11:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3528:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3528:65:11"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "3520:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3487:4:11",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "3493:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "3501:4:11",
                "type": ""
              }
            ],
            "src": "3425:174:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3700:1263:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3710:24:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3730:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3724:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3724:10:11"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "3714:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3777:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3779:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3779:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3779:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "3749:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3757:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3746:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3746:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3743:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "3852:4:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "3890:4:11"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "3884:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3884:11:11"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "3858:25:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3858:38:11"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "3898:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "3808:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3808:97:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3808:97:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3914:18:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3931:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "3918:9:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3941:23:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3960:4:11",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "3945:11:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3973:24:11",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "3986:11:11"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "3973:9:11"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4043:663:11",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4057:35:11",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "4076:6:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4088:2:11",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "4084:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4084:7:11"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4072:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4072:20:11"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "4061:7:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4105:49:11",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4149:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "4119:29:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4119:35:11"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "4109:6:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4167:10:11",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4176:1:11",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "4171:1:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4254:172:11",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4279:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "4297:3:11"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "4302:9:11"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4293:3:11"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4293:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "4287:5:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4287:26:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "4272:6:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4272:42:11"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4272:42:11"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4331:24:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4345:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4353:1:11",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4341:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4341:14:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4331:6:11"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4372:40:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4389:9:11"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4400:11:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4385:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4385:27:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "4372:9:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4201:1:11"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4204:7:11"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "4198:2:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4198:14:11"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "4213:28:11",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4215:24:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4224:1:11"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4227:11:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4220:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4220:19:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4215:1:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "4194:3:11",
                              "statements": []
                            },
                            "src": "4190:236:11"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4474:173:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4492:43:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "4519:3:11"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4524:9:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4515:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4515:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4509:5:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4509:26:11"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "4496:9:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4559:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "4571:9:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "4594:1:11",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4590:3:11"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4590:6:11"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "4602:1:11",
                                                        "type": "",
                                                        "value": "2"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "4609:1:11",
                                                            "type": "",
                                                            "value": "8"
                                                          },
                                                          {
                                                            "arguments": [
                                                              {
                                                                "name": "newLen",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4616:6:11"
                                                              },
                                                              {
                                                                "kind": "number",
                                                                "nodeType": "YulLiteral",
                                                                "src": "4624:2:11",
                                                                "type": "",
                                                                "value": "31"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "and",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "4612:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4612:15:11"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mul",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "4605:3:11"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "4605:23:11"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "exp",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4598:3:11"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4598:31:11"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "div",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4586:3:11"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4586:44:11"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "4582:3:11"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4582:49:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "4567:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4567:65:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "4552:6:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4552:81:11"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4552:81:11"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4445:7:11"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "4454:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "4442:2:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4442:19:11"
                            },
                            "nodeType": "YulIf",
                            "src": "4439:208:11"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4667:4:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "4681:6:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4689:1:11",
                                          "type": "",
                                          "value": "2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "4677:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4677:14:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4693:1:11",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4673:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4673:22:11"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "4660:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4660:36:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4660:36:11"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4036:670:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4041:1:11",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4723:234:11",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4737:14:11",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4750:1:11",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "4741:5:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4786:67:11",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4804:35:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "4823:3:11"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4828:9:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4819:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4819:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4813:5:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4813:26:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "4804:5:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "4767:6:11"
                            },
                            "nodeType": "YulIf",
                            "src": "4764:89:11"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4873:4:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "4932:5:11"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "4939:6:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "4879:52:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4879:67:11"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "4866:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4866:81:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4866:81:11"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4715:242:11",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "4016:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4024:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4013:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4013:14:11"
                  },
                  "nodeType": "YulSwitch",
                  "src": "4006:951:11"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "3685:4:11",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3691:3:11",
                "type": ""
              }
            ],
            "src": "3604:1359:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5077:76:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5087:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5099:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5110:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5095:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5095:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5087:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5129:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5140:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5122:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5122:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5122:25:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5046:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5057:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5068:4:11",
                "type": ""
              }
            ],
            "src": "4968:185:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5259:102:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5269:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5281:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5292:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5277:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5277:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5269:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5311:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5326:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5342:1:11",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5345:3:11",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "5338:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5338:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5351:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5334:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5334:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5322:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5322:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5304:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5304:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5304:51:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5228:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5239:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5250:4:11",
                "type": ""
              }
            ],
            "src": "5158:203:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5495:119:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5505:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5517:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5528:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5513:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5513:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5505:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5547:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5558:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5540:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5540:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5540:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5585:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5596:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5581:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5581:18:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5601:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5574:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5574:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5574:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5456:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5467:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5475:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5486:4:11",
                "type": ""
              }
            ],
            "src": "5366:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5667:77:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5677:16:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5688:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5691:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5684:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5684:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5677:3:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5716:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5718:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5718:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5718:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5708:1:11"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "5711:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5705:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5705:10:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5702:36:11"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5650:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5653:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5659:3:11",
                "type": ""
              }
            ],
            "src": "5619:125:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5906:188:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5916:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5928:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5939:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5924:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5924:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5916:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5958:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5973:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5989:1:11",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5992:3:11",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "5985:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5985:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5998:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5981:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5981:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5969:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5969:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5951:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5951:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5951:51:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6022:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6033:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6018:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6018:18:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6038:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6011:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6011:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6011:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6065:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6076:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6061:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6061:18:11"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6081:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6054:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6054:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6054:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5859:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5870:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5878:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5886:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5897:4:11",
                "type": ""
              }
            ],
            "src": "5749:345:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6200:76:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6210:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6222:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6233:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6218:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6218:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6210:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6252:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6263:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6245:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6245:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6245:25:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6169:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6180:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6191:4:11",
                "type": ""
              }
            ],
            "src": "6099:177:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := div(exponent, 0x02)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, div(add(startIndex, 31), 0x20))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, div(add(len, 31), 0x20))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(div(not(0), exp(2, mul(8, len))))), mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(div(not(0), exp(2, mul(8, and(newLen, 31)))))))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4144:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:427:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:11",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:11",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:11"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:11"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:11",
                    "statements": []
                  },
                  "src": "294:140:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "458:9:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "469:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "454:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "454:22:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "478:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "450:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "450:31:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "443:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "443:42:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "443:42:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "494:62:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "529:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "537:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "525:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "525:15:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "546:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "542:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "542:7:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "521:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "521:29:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:45:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "553:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "494:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:11",
                "type": ""
              }
            ],
            "src": "14:548:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "616:147:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "626:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "648:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "635:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "635:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "626:5:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "741:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "750:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "753:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "743:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "743:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "743:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "677:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "688:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "695:42:11",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "684:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "684:54:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "674:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "674:65:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "667:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:73:11"
                  },
                  "nodeType": "YulIf",
                  "src": "664:93:11"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "595:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "606:5:11",
                "type": ""
              }
            ],
            "src": "567:196:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "855:167:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "901:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "910:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "913:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "903:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "903:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "903:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "876:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "885:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "872:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "872:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "897:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "868:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "868:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "865:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "926:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "955:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "936:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "936:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "926:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "974:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1001:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1012:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "997:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "997:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "984:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "984:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "974:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "813:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "824:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "836:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "844:6:11",
                "type": ""
              }
            ],
            "src": "768:254:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1122:92:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1132:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1144:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1155:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1140:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1132:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1174:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1199:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1192:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1192:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1185:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1185:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1167:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1167:41:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1091:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1102:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1113:4:11",
                "type": ""
              }
            ],
            "src": "1027:187:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1320:76:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1330:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1342:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1353:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1338:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1338:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1330:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1372:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1383:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1365:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1365:25:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1289:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1300:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1311:4:11",
                "type": ""
              }
            ],
            "src": "1219:177:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1505:224:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1551:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1560:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1563:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1553:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1553:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1553:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1526:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1535:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1522:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1522:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1547:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1518:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1515:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1576:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1605:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1586:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1586:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1576:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1624:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1657:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1668:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1653:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1634:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1634:38:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1624:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1681:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1708:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1719:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1704:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1704:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1691:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1691:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1681:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1455:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1466:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1478:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1486:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1494:6:11",
                "type": ""
              }
            ],
            "src": "1401:328:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1831:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1841:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1853:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1864:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1849:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1849:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1841:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1883:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1898:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:4:11",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1894:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1894:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1876:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1876:36:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1876:36:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1800:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1811:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1822:4:11",
                "type": ""
              }
            ],
            "src": "1734:184:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1993:110:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2039:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2048:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2051:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2041:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2041:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2041:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2014:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2023:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2010:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2010:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2035:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2006:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2006:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2003:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2064:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2087:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2074:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2074:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2064:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1959:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1970:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1982:6:11",
                "type": ""
              }
            ],
            "src": "1923:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2178:116:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2224:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2233:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2236:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2226:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2226:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2226:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2199:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2208:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2195:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2195:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2220:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2191:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2188:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2249:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2278:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2259:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2259:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2249:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2144:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2155:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2167:6:11",
                "type": ""
              }
            ],
            "src": "2108:186:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2400:125:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2410:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2422:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2433:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2418:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2418:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2410:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2452:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2467:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2475:42:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2463:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2463:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2445:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2445:74:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2445:74:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2369:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2380:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2391:4:11",
                "type": ""
              }
            ],
            "src": "2299:226:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2617:173:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2663:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2672:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2675:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2665:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2665:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2665:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2638:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2647:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2634:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2634:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2659:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2630:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2630:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2627:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2688:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2717:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2698:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2698:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2688:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2736:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2769:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2780:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2765:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2765:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2746:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2746:38:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2736:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2575:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2586:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2598:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2606:6:11",
                "type": ""
              }
            ],
            "src": "2530:260:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2850:382:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2860:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2874:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2880:1:11",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2870:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2870:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2860:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2891:38:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2921:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2927:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2917:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2917:12:11"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2895:18:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2968:31:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2970:27:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2984:6:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2992:4:11",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2980:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2980:17:11"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2970:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2948:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2941:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2941:26:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2938:61:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3058:168:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3079:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3082:77:11",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3072:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3072:88:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3072:88:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3180:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3183:4:11",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3173:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3173:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3173:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3208:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3211:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3201:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3201:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3201:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3014:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3037:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3045:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3034:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3034:14:11"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3011:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3011:38:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3008:218:11"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2830:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2839:6:11",
                "type": ""
              }
            ],
            "src": "2795:437:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3394:211:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3404:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3416:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3427:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3412:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3412:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3404:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3446:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3461:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3469:42:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3457:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3457:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3439:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3439:74:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3439:74:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3533:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3544:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3529:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3529:18:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3549:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3522:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3522:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3522:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3576:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3587:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3572:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3572:18:11"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3592:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3565:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3565:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3565:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3347:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3358:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3366:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3374:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3385:4:11",
                "type": ""
              }
            ],
            "src": "3237:368:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3739:119:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3749:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3761:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3772:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3757:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3757:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3749:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3791:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3802:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3784:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3784:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3784:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3829:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3840:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3825:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3825:18:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3845:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3818:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3818:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3818:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3700:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3711:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3719:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3730:4:11",
                "type": ""
              }
            ],
            "src": "3610:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3911:231:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3921:16:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3932:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3935:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3928:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3928:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3921:3:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3968:168:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3989:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3992:77:11",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3982:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3982:88:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3982:88:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4090:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4093:4:11",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4083:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4083:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4083:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4118:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4121:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4111:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4111:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4111:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3952:1:11"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "3955:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3949:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3949:10:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3946:190:11"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3894:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3897:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3903:3:11",
                "type": ""
              }
            ],
            "src": "3863:279:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "520:720:10:-:0;;;634:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;807:12;777:10;:8;;;;:10;:::i;:::-;771:16;;:2;:16;:::i;:::-;764:24;;:3;:24;:::i;:::-;1904:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1978:5;1970;:13;;;;;;:::i;:::-;-1:-1:-1;1993:7:2;:17;2003:7;1993;:17;:::i;:::-;;1904:113;;756:4:5;764:1;756:9;752:65;;788:18;;;;;804:1;788:18;;;5122:25:11;5095:18;;788::5;;;;;;;;752:65;826:11;;1231:7:9;:15;;-1:-1:-1;;1231:15:9;;;-1:-1:-1;;;;;1295:26:0;;1291:95;;1344:31;;;;;1372:1;1344:31;;;5304:51:11;5277:18;;1344:31:0;5158:203:11;1291:95:0;1395:32;1414:12;1395:18;;;;:32;:::i;:::-;-1:-1:-1;837:48:10::3;843:10;873;:8;;::::0;::::3;:10;:::i;:::-;867:16;::::0;:2:::3;:16;:::i;:::-;855:29;::::0;:8:::3;:29;:::i;:::-;837:5;;::::0;::::3;:48;:::i;:::-;634:259:::0;;520:720;;3010:82:2;3083:2;;3010:82::o;2934:187:0:-;3026:6;;;-1:-1:-1;;;;;3042:17:0;;;3026:6;3042:17;;;-1:-1:-1;;;;;;3042:17:0;;;;;;3074:40;;3026:6;;;;;;;;3074:40;;3007:16;;3074:40;2997:124;2934:187;:::o;7803:208:2:-;-1:-1:-1;;;;;7873:21:2;;7869:91;;7917:32;;;;;7946:1;7917:32;;;5304:51:11;5277:18;;7917:32:2;5158:203:11;7869:91:2;7969:35;7985:1;7989:7;7998:5;7969:7;;;;:35;:::i;:::-;7803:208;;:::o;1043:194:10:-;1199:30;1213:4;1219:2;1223:5;1199:13;;;;:30;:::i;:::-;1043:194;;;:::o;1112:145:6:-;1474:19:9;:17;;;;:19;:::i;:::-;1220:30:6::1;1234:4:::0;1240:2;1244:5;1220:13:::1;;::::0;::::1;:30;:::i;2002:128:9:-:0;2067:8;:6;;;;:8;:::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;1059:371:5:-;1153:30;1167:4;1173:2;1177:5;1153:13;;;;:30;:::i;:::-;-1:-1:-1;;;;;1198:18:5;;1194:230;;1232:17;1252:5;:3;;;;:5;:::i;:::-;1232:25;-1:-1:-1;1271:14:5;1288:13;:11;;;;:13;:::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1364:35;;;;;;;;5540:25:11;;;5581:18;;;5574:34;;;5513:18;;1364:35:5;5366:248:11;1315:99:5;1218:206;;1059:371;;;:::o;1850:84:9:-;1920:7;;;;;1850:84::o;6353:1107:2:-;-1:-1:-1;;;;;6442:18:2;;6438:540;;6594:5;6578:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6438:540:2;;-1:-1:-1;6438:540:2;;-1:-1:-1;;;;;6652:15:2;;6630:19;6652:15;;;;;;;;;;;6685:19;;;6681:115;;;6731:50;;;;;-1:-1:-1;;;;;5969:32:11;;6731:50:2;;;5951:51:11;6018:18;;;6011:34;;;6061:18;;;6054:34;;;5924:18;;6731:50:2;5749:345:11;6681:115:2;-1:-1:-1;;;;;6916:15:2;;:9;:15;;;;;;;;;;6934:19;;;;6916:37;;6438:540;-1:-1:-1;;;;;6992:16:2;;6988:425;;7155:12;:21;;;;;;;6988:425;;;-1:-1:-1;;;;;7366:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6988:425;7443:2;-1:-1:-1;;;;;7428:25:2;7437:4;-1:-1:-1;;;;;7428:25:2;;7447:5;7428:25;;;;5122::11;;5110:2;5095:18;;4968:185;7428:25:2;;;;;;;;6353:1107;;;:::o;923:81:5:-;993:4;;;923:81::o;3152:97:2:-;3230:12;;;3152:97::o;14:351:11:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;193:16;;252:2;237:18;;231:25;193:16;;-1:-1:-1;;;;;;285:31:11;;275:42;;265:70;;331:1;328;321:12;265:70;354:5;344:15;;;14:351;;;;;:::o;370:184::-;422:77;419:1;412:88;519:4;516:1;509:15;543:4;540:1;533:15;559:419;648:1;691:5;648:1;705:267;726:7;716:8;713:21;705:267;;;785:4;781:1;777:6;773:17;767:4;764:27;761:53;;;794:18;;:::i;:::-;844:7;834:8;830:22;827:55;;;864:16;;;;827:55;957:4;943:19;;;;903:15;;;;705:267;;;709:3;559:419;;;;;:::o;983:806::-;1032:5;1062:8;1052:80;;-1:-1:-1;1103:1:11;1117:5;;1052:80;1151:4;1141:76;;-1:-1:-1;1188:1:11;1202:5;;1141:76;1233:4;1251:1;1246:59;;;;1319:1;1314:130;;;;1226:218;;1246:59;1276:1;1267:10;;1290:5;;;1314:130;1351:3;1341:8;1338:17;1335:43;;;1358:18;;:::i;:::-;1407:8;1404:1;1400:16;1391:25;;1429:5;;;1226:218;;1528:2;1518:8;1515:16;1509:3;1503:4;1500:13;1496:36;1490:2;1480:8;1477:16;1472:2;1466:4;1463:12;1459:35;1456:77;1453:159;;;-1:-1:-1;1565:19:11;;;1597:5;;1453:159;1644:34;1669:8;1663:4;1644:34;:::i;:::-;1714:6;1710:1;1706:6;1702:19;1693:7;1690:32;1687:58;;;1725:18;;:::i;:::-;1763:20;;-1:-1:-1;983:806:11;;;;;:::o;1794:140::-;1852:5;1881:47;1922:4;1912:8;1908:19;1902:4;1881:47;:::i;:::-;1872:56;1794:140;-1:-1:-1;;;1794:140:11:o;1939:168::-;2012:9;;;2043;;2060:15;;;2054:22;;2040:37;2030:71;;2081:18;;:::i;2112:184::-;2164:77;2161:1;2154:88;2261:4;2258:1;2251:15;2285:4;2282:1;2275:15;2301:437;2386:1;2376:12;;2433:1;2423:12;;;2444:61;;2498:4;2490:6;2486:17;2476:27;;2444:61;2551:2;2543:6;2540:14;2520:18;2517:38;2514:218;;2588:77;2585:1;2578:88;2689:4;2686:1;2679:15;2717:4;2714:1;2707:15;2514:218;;2301:437;;;:::o;2869:551::-;2971:2;2966:3;2963:11;2960:454;;;3007:1;3032:5;3028:2;3021:17;3077:4;3073:2;3063:19;3149:4;3144:2;3132:10;3128:19;3124:30;3118:4;3114:41;3186:4;3174:10;3171:20;3168:47;;;-1:-1:-1;3209:4:11;3168:47;3266:4;3261:2;3256:3;3252:12;3248:23;3242:4;3238:34;3228:44;;3322:82;3340:2;3333:5;3330:13;3322:82;;;3385:17;;;3366:1;3355:13;3322:82;;;3326:3;;;2869:551;;;:::o;3604:1359::-;3730:3;3724:10;3757:18;3749:6;3746:30;3743:56;;;3779:18;;:::i;:::-;3808:97;3898:6;3858:38;3890:4;3884:11;3858:38;:::i;:::-;3852:4;3808:97;:::i;:::-;3960:4;;4024:2;4013:14;;4041:1;4036:670;;;;4750:1;4767:6;4764:89;;;-1:-1:-1;4819:19:11;;;4813:26;4764:89;3585:1;3581:11;;;3568:1;3564:11;;3557:19;;;-1:-1:-1;;3545:32:11;3541:37;3531:48;;3528:65;4873:4;4866:81;;4006:951;;4036:670;2816:1;2809:14;;;2853:4;2840:18;;-1:-1:-1;;4072:20:11;;;4190:236;4204:7;4201:1;4198:14;4190:236;;;4293:19;;;4287:26;4272:42;;4385:27;;;;4353:1;4341:14;;;;4220:19;;4190:236;;;4194:3;4454:6;4445:7;4442:19;4439:208;;;4515:19;;;4509:26;4609:1;4624:2;4612:15;;4605:23;4602:1;4598:31;-1:-1:-1;;4586:44:11;4582:49;4567:65;4552:81;;4439:208;-1:-1:-1;;;;;4689:1:11;4677:14;4693:1;4673:22;4660:36;;-1:-1:-1;3604:1359:11:o;5619:125::-;5684:9;;;5705:10;;;5702:36;;;5718:18;;:::i;6099:177::-;520:720:10;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "520:720:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4323:208;;;;;;:::i;:::-;;:::i;:::-;;;1192:14:11;;1185:22;1167:41;;1155:2;1140:18;4323:208:2;1027:187:11;3152:97:2;3230:12;;3152:97;;;1365:25:11;;;1353:2;1338:18;3152:97:2;1219:177:11;5091:274:2;;;;;;:::i;:::-;;:::i;3010:82::-;;;3083:2;1876:36:11;;1864:2;1849:18;3010:82:2;1734:184:11;923:81:5;993:4;923:81;;970:65:10;;;:::i;:::-;;618:87:4;;;;;;:::i;:::-;;:::i;1850:84:9:-;1920:7;;;;1850:84;;3307:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3398:18:2;3372:7;3398:18;;;;;;;;;;;;3307:116;2315:101:0;;;:::i;1021:158:4:-;;;;;;:::i;:::-;;:::i;901:61:10:-;;;:::i;1660:85:0:-;1732:6;;;;;-1:-1:-1;;;;;1732:6:0;1660:85;;-1:-1:-1;;;;;2463:55:11;;;2445:74;;2433:2;2418:18;1660:85:0;2299:226:11;2284:93:2;;;:::i;3618:178::-;;;;;;:::i;:::-;;:::i;3854:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3982:18:2;;;3956:7;3982:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3854:162;2565:215:0;;;;;;:::i;:::-;;:::i;2082:89:2:-;2127:13;2159:5;2152:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:89;:::o;4323:208::-;4418:4;735:10:8;4472:31:2;735:10:8;4488:7:2;4497:5;4472:8;:31::i;:::-;4520:4;4513:11;;;4323:208;;;;;:::o;5091:274::-;5208:4;735:10:8;5264:37:2;5280:4;735:10:8;5295:5:2;5264:15;:37::i;:::-;5311:26;5321:4;5327:2;5331:5;5311:9;:26::i;:::-;-1:-1:-1;5354:4:2;;5091:274;-1:-1:-1;;;;5091:274:2:o;970:65:10:-;1553:13:0;:11;:13::i;:::-;1017:10:10::1;:8;:10::i;:::-;970:65::o:0;618:87:4:-;672:26;735:10:8;692:5:4;672;:26::i;:::-;618:87;:::o;2315:101:0:-;1553:13;:11;:13::i;:::-;2379:30:::1;2406:1;2379:18;:30::i;1021:158:4:-:0;1096:45;1112:7;735:10:8;1135:5:4;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;901:61:10:-;1553:13:0;:11;:13::i;:::-;946:8:10::1;:6;:8::i;2284:93:2:-:0;2331:13;2363:7;2356:14;;;;;:::i;3618:178::-;3687:4;735:10:8;3741:27:2;735:10:8;3758:2:2;3762:5;3741:9;:27::i;2565:215:0:-;1553:13;:11;:13::i;:::-;-1:-1:-1;;;;;2649:22:0;::::1;2645:91;;2694:31;::::0;::::1;::::0;;2722:1:::1;2694:31;::::0;::::1;2445:74:11::0;2418:18;;2694:31:0::1;;;;;;;;2645:91;2745:28;2764:8;2745:18;:28::i;9071:128:2:-:0;9155:37;9164:5;9171:7;9180:5;9187:4;9155:8;:37::i;:::-;9071:128;;;:::o;10783:585::-;-1:-1:-1;;;;;3982:18:2;;;10912:24;3982:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10978:37:2;;10974:388;;11054:5;11035:16;:24;11031:208;;;11086:138;;;;;-1:-1:-1;;;;;3457:55:11;;11086:138:2;;;3439:74:11;3529:18;;;3522:34;;;3572:18;;;3565:34;;;3412:18;;11086:138:2;3237:368:11;11031:208:2;11280:57;11289:5;11296:7;11324:5;11305:16;:24;11331:5;11280:8;:57::i;:::-;10902:466;10783:585;;;:::o;5738:300::-;-1:-1:-1;;;;;5821:18:2;;5817:86;;5862:30;;;;;5889:1;5862:30;;;2445:74:11;2418:18;;5862:30:2;2299:226:11;5817:86:2;-1:-1:-1;;;;;5916:16:2;;5912:86;;5955:32;;;;;5984:1;5955:32;;;2445:74:11;2418:18;;5955:32:2;2299:226:11;5912:86:2;6007:24;6015:4;6021:2;6025:5;6007:7;:24::i;1818:162:0:-;1732:6;;-1:-1:-1;;;;;1732:6:0;;;;;735:10:8;1877:23:0;1873:101;;1923:40;;;;;735:10:8;1923:40:0;;;2445:74:11;2418:18;;1923:40:0;2299:226:11;2710:117:9;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:9::1;::::0;;2798:22:::1;735:10:8::0;2807:12:9::1;2798:22;::::0;-1:-1:-1;;;;;2463:55:11;;;2445:74;;2433:2;2418:18;2798:22:9::1;;;;;;;2710:117::o:0;8329:206:2:-;-1:-1:-1;;;;;8399:21:2;;8395:89;;8443:30;;;;;8470:1;8443:30;;;2445:74:11;2418:18;;8443:30:2;2299:226:11;8395:89:2;8493:35;8501:7;8518:1;8522:5;8493:7;:35::i;2934:187:0:-;3026:6;;;-1:-1:-1;;;;;3042:17:0;;;3026:6;3042:17;;;-1:-1:-1;;3042:17:0;;;;;;3074:40;;3026:6;;;;;;;;3074:40;;3007:16;;3074:40;2997:124;2934:187;:::o;2463:115:9:-;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;2522:14:9::1;2532:4;2522:14;::::0;;2551:20:::1;2558:12;735:10:8::0;;656:96;10031:470:2;-1:-1:-1;;;;;10181:19:2;;10177:89;;10223:32;;;;;10252:1;10223:32;;;2445:74:11;2418:18;;10223:32:2;2299:226:11;10177:89:2;-1:-1:-1;;;;;10279:21:2;;10275:90;;10323:31;;;;;10351:1;10323:31;;;2445:74:11;2418:18;;10323:31:2;2299:226:11;10275:90:2;-1:-1:-1;;;;;10374:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10419:76;;;;10469:7;-1:-1:-1;;;;;10453:31:2;10462:5;-1:-1:-1;;;;;10453:31:2;;10478:5;10453:31;;;;1365:25:11;;1353:2;1338:18;;1219:177;10453:31:2;;;;;;;;10031:470;;;;:::o;1043:194:10:-;1199:30;1213:4;1219:2;1223:5;1199:13;:30::i;2202:126:9:-;1920:7;;;;2260:62;;2296:15;;;;;;;;;;;;;;2002:128;1920:7;;;;2063:61;;;2098:15;;;;;;;;;;;;;;1112:145:6;1474:19:9;:17;:19::i;:::-;1220:30:6::1;1234:4;1240:2;1244:5;1153:30:5::0;1167:4;1173:2;1177:5;1153:13;:30::i;:::-;-1:-1:-1;;;;;1198:18:5;;1194:230;;3230:12:2;;993:4:5;;1328:9;1319:6;:18;1315:99;;;1364:35;;;;;;;;3784:25:11;;;3825:18;;;3818:34;;;3757:18;;1364:35:5;3610:248:11;1315:99:5;1218:206;;1059:371;;;:::o;6353:1107:2:-;-1:-1:-1;;;;;6442:18:2;;6438:540;;6594:5;6578:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6438:540:2;;-1:-1:-1;6438:540:2;;-1:-1:-1;;;;;6652:15:2;;6630:19;6652:15;;;;;;;;;;;6685:19;;;6681:115;;;6731:50;;;;;-1:-1:-1;;;;;3457:55:11;;6731:50:2;;;3439:74:11;3529:18;;;3522:34;;;3572:18;;;3565:34;;;3412:18;;6731:50:2;3237:368:11;6681:115:2;-1:-1:-1;;;;;6916:15:2;;:9;:15;;;;;;;;;;6934:19;;;;6916:37;;6438:540;-1:-1:-1;;;;;6992:16:2;;6988:425;;7155:12;:21;;;;;;;6988:425;;;-1:-1:-1;;;;;7366:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6988:425;7443:2;-1:-1:-1;;;;;7428:25:2;7437:4;-1:-1:-1;;;;;7428:25:2;;7447:5;7428:25;;;;1365::11;;1353:2;1338:18;;1219:177;7428:25:2;;;;;;;;6353:1107;;;:::o;14:548:11:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:196::-;635:20;;-1:-1:-1;;;;;684:54:11;;674:65;;664:93;;753:1;750;743:12;664:93;567:196;;;:::o;768:254::-;836:6;844;897:2;885:9;876:7;872:23;868:32;865:52;;;913:1;910;903:12;865:52;936:29;955:9;936:29;:::i;:::-;926:39;1012:2;997:18;;;;984:32;;-1:-1:-1;;;768:254:11:o;1401:328::-;1478:6;1486;1494;1547:2;1535:9;1526:7;1522:23;1518:32;1515:52;;;1563:1;1560;1553:12;1515:52;1586:29;1605:9;1586:29;:::i;:::-;1576:39;;1634:38;1668:2;1657:9;1653:18;1634:38;:::i;:::-;1624:48;;1719:2;1708:9;1704:18;1691:32;1681:42;;1401:328;;;;;:::o;1923:180::-;1982:6;2035:2;2023:9;2014:7;2010:23;2006:32;2003:52;;;2051:1;2048;2041:12;2003:52;-1:-1:-1;2074:23:11;;1923:180;-1:-1:-1;1923:180:11:o;2108:186::-;2167:6;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;2108:186;-1:-1:-1;;;2108:186:11:o;2530:260::-;2598:6;2606;2659:2;2647:9;2638:7;2634:23;2630:32;2627:52;;;2675:1;2672;2665:12;2627:52;2698:29;2717:9;2698:29;:::i;:::-;2688:39;;2746:38;2780:2;2769:9;2765:18;2746:38;:::i;:::-;2736:48;;2530:260;;;;;:::o;2795:437::-;2880:1;2870:12;;2927:1;2917:12;;;2938:61;;2992:4;2984:6;2980:17;2970:27;;2938:61;3045:2;3037:6;3034:14;3014:18;3011:38;3008:218;;3082:77;3079:1;3072:88;3183:4;3180:1;3173:15;3211:4;3208:1;3201:15;3008:218;;2795:437;;;:::o;3863:279::-;3928:9;;;3949:10;;;3946:190;;;3992:77;3989:1;3982:88;4093:4;4090:1;4083:15;4121:4;4118:1;4111:15",
  "source": "// contracts/SpaceToken.sol\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {ERC20Capped} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\r\nimport {ERC20Pausable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract SpaceToken is\r\n    ERC20,\r\n    ERC20Capped,\r\n    ERC20Burnable,\r\n    ERC20Pausable,\r\n    Ownable\r\n{\r\n    constructor(\r\n        uint256 cap,\r\n        address initialOwner\r\n    )\r\n        ERC20(\"SpaceToken\", \"SPTX\")\r\n        ERC20Capped(cap * (10 ** decimals()))\r\n        Ownable(initialOwner)\r\n    {\r\n        _mint(msg.sender, 50000000 * (10 ** decimals()));\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function _update(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal override(ERC20, ERC20Capped, ERC20Pausable) {\r\n        super._update(from, to, value);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\siya\\projects\\space-token\\contracts\\SpaceToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/SpaceToken.sol",
    "exportedSymbols": {
      "ERC20": [
        799
      ],
      "ERC20Burnable": [
        923
      ],
      "ERC20Capped": [
        1022
      ],
      "ERC20Pausable": [
        1056
      ],
      "Ownable": [
        147
      ],
      "SpaceToken": [
        1328
      ]
    },
    "id": 1329,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1231,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:24:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1233,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1329,
        "sourceUnit": 800,
        "src": "92:68:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1232,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 799,
              "src": "100:5:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "id": 1235,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1329,
        "sourceUnit": 1023,
        "src": "162:91:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1234,
              "name": "ERC20Capped",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1022,
              "src": "170:11:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "id": 1237,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1329,
        "sourceUnit": 1057,
        "src": "255:95:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1236,
              "name": "ERC20Pausable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1056,
              "src": "263:13:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 1239,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1329,
        "sourceUnit": 924,
        "src": "352:95:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1238,
              "name": "ERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 923,
              "src": "360:13:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1241,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1329,
        "sourceUnit": 148,
        "src": "449:67:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1240,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 147,
              "src": "457:7:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1242,
              "name": "ERC20",
              "nameLocations": [
                "548:5:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 799,
              "src": "548:5:10"
            },
            "id": 1243,
            "nodeType": "InheritanceSpecifier",
            "src": "548:5:10"
          },
          {
            "baseName": {
              "id": 1244,
              "name": "ERC20Capped",
              "nameLocations": [
                "560:11:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1022,
              "src": "560:11:10"
            },
            "id": 1245,
            "nodeType": "InheritanceSpecifier",
            "src": "560:11:10"
          },
          {
            "baseName": {
              "id": 1246,
              "name": "ERC20Burnable",
              "nameLocations": [
                "578:13:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 923,
              "src": "578:13:10"
            },
            "id": 1247,
            "nodeType": "InheritanceSpecifier",
            "src": "578:13:10"
          },
          {
            "baseName": {
              "id": 1248,
              "name": "ERC20Pausable",
              "nameLocations": [
                "598:13:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1056,
              "src": "598:13:10"
            },
            "id": 1249,
            "nodeType": "InheritanceSpecifier",
            "src": "598:13:10"
          },
          {
            "baseName": {
              "id": 1250,
              "name": "Ownable",
              "nameLocations": [
                "618:7:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "618:7:10"
            },
            "id": 1251,
            "nodeType": "InheritanceSpecifier",
            "src": "618:7:10"
          }
        ],
        "canonicalName": "SpaceToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1328,
        "linearizedBaseContracts": [
          1328,
          147,
          1056,
          1229,
          923,
          1022,
          799,
          189,
          1082,
          877,
          1112
        ],
        "name": "SpaceToken",
        "nameLocation": "529:10:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1286,
              "nodeType": "Block",
              "src": "826:67:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1275,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "843:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "847:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "843:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3530303030303030",
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "855:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50000000_by_1",
                            "typeString": "int_const 50000000"
                          },
                          "value": "50000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "867:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1279,
                                  "name": "decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 363,
                                  "src": "873:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                    "typeString": "function () view returns (uint8)"
                                  }
                                },
                                "id": 1280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "873:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "867:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1282,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "866:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "855:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1274,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "837:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1285,
                  "nodeType": "ExpressionStatement",
                  "src": "837:48:10"
                }
              ]
            },
            "id": 1287,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5370616365546f6b656e",
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "721:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cb470106c9eb5ba01ceb7837b1daf1c603f8ca95e88475ad32cc6a9286f44e47",
                      "typeString": "literal_string \"SpaceToken\""
                    },
                    "value": "SpaceToken"
                  },
                  {
                    "hexValue": "53505458",
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "735:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7a27a8520751f9864a0948a7d1a31e45f69908a547c7143c56598fbe2a83cc60",
                      "typeString": "literal_string \"SPTX\""
                    },
                    "value": "SPTX"
                  }
                ],
                "id": 1260,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1257,
                  "name": "ERC20",
                  "nameLocations": [
                    "715:5:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 799,
                  "src": "715:5:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "715:27:10"
              },
              {
                "arguments": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1262,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "764:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 1263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "771:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1264,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "777:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "777:10:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "771:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1267,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "770:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "764:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1269,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1261,
                  "name": "ERC20Capped",
                  "nameLocations": [
                    "752:11:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1022,
                  "src": "752:11:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "752:37:10"
              },
              {
                "arguments": [
                  {
                    "id": 1271,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1255,
                    "src": "807:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1272,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1270,
                  "name": "Ownable",
                  "nameLocations": [
                    "799:7:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "799:7:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "799:21:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "cap",
                  "nameLocation": "664:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "656:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "686:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "678:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "645:60:10"
            },
            "returnParameters": {
              "id": 1273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "826:0:10"
            },
            "scope": 1328,
            "src": "634:259:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1295,
              "nodeType": "Block",
              "src": "935:27:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1292,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1212,
                      "src": "946:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:8:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "946:8:10"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 1296,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1290,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1289,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "925:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "925:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "925:9:10"
              }
            ],
            "name": "pause",
            "nameLocation": "910:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:2:10"
            },
            "returnParameters": {
              "id": 1291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:10"
            },
            "scope": 1328,
            "src": "901:61:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1304,
              "nodeType": "Block",
              "src": "1006:29:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1301,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1228,
                      "src": "1017:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1017:10:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1303,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:10:10"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 1305,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1299,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1298,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "996:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "996:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "996:9:10"
              }
            ],
            "name": "unpause",
            "nameLocation": "979:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:2:10"
            },
            "returnParameters": {
              "id": 1300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1006:0:10"
            },
            "scope": 1328,
            "src": "970:65:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              606,
              1021,
              1055
            ],
            "body": {
              "id": 1326,
              "nodeType": "Block",
              "src": "1188:49:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1321,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1307,
                        "src": "1213:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1322,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1309,
                        "src": "1219:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1323,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1311,
                        "src": "1223:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1318,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1199:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SpaceToken_$1328_$",
                          "typeString": "type(contract super SpaceToken)"
                        }
                      },
                      "id": 1320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1205:7:10",
                      "memberName": "_update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1055,
                      "src": "1199:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1199:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1325,
                  "nodeType": "ExpressionStatement",
                  "src": "1199:30:10"
                }
              ]
            },
            "id": 1327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_update",
            "nameLocation": "1052:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1316,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1313,
                  "name": "ERC20",
                  "nameLocations": [
                    "1153:5:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 799,
                  "src": "1153:5:10"
                },
                {
                  "id": 1314,
                  "name": "ERC20Capped",
                  "nameLocations": [
                    "1160:11:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1022,
                  "src": "1160:11:10"
                },
                {
                  "id": 1315,
                  "name": "ERC20Pausable",
                  "nameLocations": [
                    "1173:13:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1056,
                  "src": "1173:13:10"
                }
              ],
              "src": "1144:43:10"
            },
            "parameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1307,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1078:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1327,
                  "src": "1070:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1309,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1101:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1327,
                  "src": "1093:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1311,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1122:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1327,
                  "src": "1114:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1059:75:10"
            },
            "returnParameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1188:0:10"
            },
            "scope": 1328,
            "src": "1043:194:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1329,
        "src": "520:720:10",
        "usedErrors": [
          13,
          18,
          159,
          164,
          169,
          178,
          183,
          188,
          939,
          944,
          1134,
          1137
        ],
        "usedEvents": [
          24,
          811,
          820,
          1126,
          1131
        ]
      }
    ],
    "src": "64:1178:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-04-20T23:48:03.951Z",
  "devdoc": {
    "errors": {
      "ERC20ExceededCap(uint256,uint256)": [
        {
          "details": "Total supply cap has been exceeded."
        }
      ],
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidCap(uint256)": [
        {
          "details": "The supplied cap is not a valid cap."
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}